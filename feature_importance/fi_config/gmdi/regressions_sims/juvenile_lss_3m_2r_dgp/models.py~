import numpy as np
from sklearn.ensemble import RandomForestRegressor
#from imodels import (
#    GreedyTreeClassifier, GreedyTreeRegressor, HSTreeClassifierCV, HSTreeRegressorCV
#)
from feature_importance.util import ModelConfig, FIModelConfig
from feature_importance.scripts.competing_methods import tree_mdi, tree_mdi_OOB, tree_perm_importance, tree_shap,r2f,gMDI,gjMDI,tree_mda,ridge_cv,lin_reg_marginal_t_test
from sklearn.metrics import roc_auc_score, f1_score, recall_score, precision_score,average_precision_score,log_loss,r2_score
from sklearn.linear_model import LinearRegression, LogisticRegression
# N_ESTIMATORS=[50, 100, 500, 1000]
ESTIMATORS = [
    [ModelConfig('RF', RandomForestRegressor, model_type='tree',
                 other_params={'n_estimators': 500, 'min_samples_leaf': 5, 'max_features': 0.33,'random_state':42})],
    [ModelConfig('OLS', LinearRegression, model_type='linear')],
    # [ModelConfig('RF', RandomForestRegressor, model_type='tree', vary_param="n_estimators", vary_param_val=m,
    #              other_params={'min_samples_leaf': 5, 'max_features': 0.33}) for m in N_ESTIMATORS]
]

FI_ESTIMATORS = [
    #[FIModelConfig('r2f', r2f, model_type='tree')],
    #[FIModelConfig('r2f_ridge_normalize_raw',r2f, model_type='tree',other_params = {'scoring_type':"ridge","normalize_raw":True,"pca":False,"criterion":"gcv"})],
    #[FIModelConfig('r2f_ridge_normalize_raw_error_gcv',r2f, model_type='tree',other_params = {'scoring_type':"ridge","normalize_raw":True,"pca":False,"criterion":"gcv","error_metric":"gcv"})],
    #[FIModelConfig('r2f_robust_normalize',r2f, model_type='tree',other_params = {'scoring_type':"robust","normalize_raw":True,"pca":False,"criterion":"gcv","error_metric":"gcv"})],
    #[FIModelConfig('r2f_ridge_no_normalize_raw',r2f, model_type='tree',other_params = {'scoring_type':"ridge","normalize_raw":False,"pca":False,"criterion":"gcv"})],
    #[FIModelConfig('r2f_ridge_normalize_raw_gcv1SE',r2f, model_type='tree',other_params = {'scoring_type':"ridge","normalize_raw":True,"pca":False,"criterion":"gcv_1se"})],
    #[FIModelConfig('r2f_ridge_no_normalize_raw_gcv1SE',r2f, model_type='tree',other_params = {'scoring_type':"ridge","normalize_raw":False,"pca":False,"criterion":"gcv_1se"})],
    #[FIModelConfig('gMDI_ridge_normalize_raw',gMDI, model_type='tree',other_params = {'scoring_type':"ridge","normalize_raw":True,"criterion":"gcv"})],
    #[FIModelConfig('gMDI_ridge_normalize_raw_error_gcv',gMDI, model_type='tree',other_params = {'scoring_type':"ridge","normalize_raw":True,"criterion":"gcv","error_metric":"gcv"})],
    #[FIModelConfig('gMDI_ridge_robust',gMDI, model_type='tree',other_params = {'scoring_type':"robust","normalize_raw":True,"criterion":"gcv"})],
    #[FIModelConfig('gMDI_ridge_no_normalize_raw',gMDI, model_type='tree',other_params = {'scoring_type':"ridge","normalize_raw":False,"criterion":"gcv"})],
    #[FIModelConfig('gMDI_ridge_normalize_raw_gcv1SE',gMDI, model_type='tree',other_params = {'scoring_type':"ridge","normalize_raw":True,"criterion":"gcv_1se"})],
    #[FIModelConfig('gMDI_ridge_no_normalize_raw_gcv1SE',gMDI, model_type='tree',other_params = {'scoring_type':"ridge","normalize_raw":False,"criterion":"gcv_1se"})],
    #[FIModelConfig('gjMDI_ridge_no_norm_loocv',gjMDI, model_type='tree',other_params = {'scoring_type':"ridge","normalize_raw":False,"criterion":"gcv","error_metric":"loocv"})],
    #[FIModelConfig('gjMDI_ridge_norm_loocv',gjMDI, model_type='tree',other_params = {'scoring_type':"ridge","normalize_raw":True,"criterion":"gcv","error_metric":"loocv"})],
    #[FIModelConfig('gjMDI_ridge_norm_loocv_no_oob',gjMDI, model_type='tree',other_params = {'scoring_type':"ridge","normalize_raw":True,"criterion":"gcv","error_metric":"loocv","oob":False})],
    ##[FIModelConfig('gjMDI_ridge_norm_loocv_no_oob_weighted',gjMDI, model_type='tree',other_params = {'scoring_type':"ridge","normalize_raw":True,"criterion":"gcv","error_metric":"loocv","oob":False,"sample_weight":"ridge_oob"})],
    #[FIModelConfig('gjMDI_ridge_no_norm_loocv_no_oob',gjMDI, model_type='tree',other_params = {'scoring_type':"ridge","normalize_raw":False,"criterion":"gcv","error_metric":"loocv","oob":False})],
    #[FIModelConfig('gjMDI_lasso_norm',gjMDI, model_type='tree',other_params = {'scoring_type':"lasso","normalize_raw":True})],
    #[FIModelConfig('gjMDI_lasso_no_norm',gjMDI, model_type='tree',other_params = {'scoring_type':"lasso","normalize_raw":False})],
    #[FIModelConfig('gjMDI_lasso_norm_no_oob',gjMDI, model_type='tree',other_params = {'scoring_type':"lasso","normalize_raw":True,"oob":False})],
    #[FIModelConfig('gjMDI_lasso_no_norm_no_oob',gjMDI, model_type='tree',other_params = {'scoring_type':"lasso","normalize_raw":True,"oob":False})],
    #[FIModelConfig('gjMDI_lasso_no_raw_norm',gjMDI, model_type='tree',other_params = {'scoring_type':"lasso","normalize_raw":True,"add_raw":False})],
    #[FIModelConfig('gjMDI_lasso_norm_sample_split',gjMDI, model_type='tree',other_params = {'scoring_type':"lasso","normalize_raw":True,"lasso_sample_split":True})],
    #[FIModelConfig('gjMDI_lasso_norm_false',gjMDI, model_type='tree',other_params = {'scoring_type':"lasso","normalize_raw":True,"add_raw":False})],
    #[FIModelConfig('gjMDI_ridge_normalize_raw_error_gcv',gjMDI, model_type='tree',other_params = {'scoring_type':"ridge","normalize_raw":True,"criterion":"gcv","error_metric":"gcv"})],
    #[FIModelConfig('gjMDI_ridge_no_normalize_raw',gjMDI, model_type='tree',other_params = {'scoring_type':"ridge","normalize_raw":False,"criterion":"gcv"})],
    #[FIModelConfig('gjMDI_ridge_normalize_raw_gcv1SE',gjMDI, model_type='tree',other_params = {'scoring_type':"ridge","normalize_raw":True,"criterion":"gcv_1se"})],
    #[FIModelConfig('gjMDI_ridge_no_normalize_raw_gcv1SE',gjMDI, model_type='tree',other_params = {'scoring_type':"ridge","normalize_raw":False,"criterion":"gcv_1se"})],

    #####FINAL METHODS#######
    
    [FIModelConfig('gjMDI_ridge_norm_loocv_no_oob',gjMDI, model_type='tree',other_params = {'scoring_type':"ridge","normalize_raw":True,"criterion":"gcv","error_metric":"loocv","oob":False})],
    [FIModelConfig('gjMDI_ridge_norm_loocv_oob',gjMDI, model_type='tree',other_params = {'scoring_type':"ridge","normalize_raw":True,"criterion":"gcv","error_metric":"loocv","oob":True})],
    #[FIModelConfig('gjMDI_enet_norm_loocv_no_oob',gjMDI, model_type='tree',other_params = {'scoring_type':"alo_elastic","normalize_raw":True,"error_metric":r2_score,"oob":False})],
    #[FIModelConfig('MDI', tree_mdi, model_type='tree')],
    [FIModelConfig('MDI-oob', tree_mdi_OOB, model_type='tree')],
    #[FIModelConfig('Permutation', tree_perm_importance, model_type='tree')],
    #[FIModelConfig('TreeSHAP', tree_shap, model_type='tree')],
    #[FIModelConfig('Ttest', lin_reg_marginal_t_test, ascending = False,model_type='linear')],
    #[FIModelConfig('RidgeCV', ridge_cv, model_type = 'tree')],
    #[FIModelConfig('MDA',tree_mda,model_type = 'tree')],
]
